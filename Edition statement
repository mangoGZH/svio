版本说明：

　　svo_edgelet 20-4-13
    该版本为ｓｖｏ贺一家ｇｉｔｈｕｂ下载初始版本
　　对源程序无做任何修改
　　～　仅对ｃｍｋａｅｌｉｓｔ以及部头文件进行ｄｅｂｕｇ，以满足本地编译


  svo_0.0  20-4-14
    ～　添加轨迹输出文件，可进行全局精度评估 　
　　　　由于这个版本的输入数据集文件包含单独的时间戳文件(只有MH_01数据集可用)


  svo_0.1   20-4-15
    ～　将test_piple_euroc.cpp 中的　数据读取＆输入输出模块化　
　　～　增加了：　Data_EuRoc.cpp/.h文件：  构造类EuRocData *dataset，用于数据文件的储存
　　～　增加了：　文件/config_param.yaml：用于对参数调试的修改　
　　　　　　　　　　　　　　　　(注意：参数改变的路经--->home/gzh/SVIO_rebuild/svo_0 .1/test/config_param.yaml)

    ～　测试原代码的轨迹精度
　　　　****精度　scale_corrected_rmse:　　0.249041/ 0.105990/ 0.132939


  svio_1.0   20-4-15
　　～　添加ｉｍｕ传感器数据读取，在test_piple_euroc.cpp中，添加一個while(1)循环，对相邻两帧图像之间的ｉｍｕ数据分段(3段)读取
　　～　添加ｉｍｕ初始化模块： vio_init.h / vio_init.cpp :VioInitializationl类.　KeyFrameInit类
　　　　　　　　　　　　　　　　　　　　　　　　　　　:　 VioInitialization::run() {while(循环){TryVioInit() 进行初始化计算}} 
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　 此处需要有一定延时，否则循环无法运行
          　　　　　　　　　　　　　　　　　:　输出初始化参数文件"/home/gzh/vio_init_outfile/";
　　　　　　　　　　　　　　　　　　　　　　　　　　　:　更新初始化参数　关键帧位姿，种子点深度，imu状态，特征点空间位置
　　～　每个图像帧到达时，更新imu_state状态
　　～　在processframe()中添加:addImu(),对相邻两帧之间对 imu_data 进行预积分计算 imuPreint.update(imu._g - bg, imu._a - ba, imu._t);
　　～　由于外部拷贝的文件会出现无法使用的情况，对src/IMU/中的几个.cpp文件重新拷贝
　　～　设置初始化模块与运动跟踪模块之间的交互关系：
                      1)初始化算法：在关键帧到来时刻进行联合初始化运算，因此初始化模块需要等待　帧处理流程中的read_kf_permisiion
                        帧处理过程中：当确定了新的关键帧后，需要将关键帧添加到map和depthfilter中，在此期间不能进行联合初始化计算
　　　　　　　　　　　　　因此在 addKeyframe to map 和depthfilterset之前需要 set Permission_Read_kf(false)
                               add完成之后　set Permission_Read_kf(true)
                      2)当达到联合初始化收敛条件时，需要对所有　每帧图像位姿/kf位姿/地图点位置/scale/IMU参数　进行更新
　　　　　　　　　　　　　在该过程中，不能进行图像帧处理
　　　　　　　　　　　　　图像帧处理　processFrame()的入口处需要获得　processframe_permission才能继续处理图像,　否则　需要等待
　　　　　　　　　　　　　因此　vio_init在位姿更新前需要，set　Permission_ProcessFrame(false);
　　　　　　　　　　　　　　　　　　　　　                   位姿更新完之后，set　Permission_ProcessFrame(true);
　　　　　　　　　　　　　　　　　　　　　　3)还有一个　permission_update_kf_　有待观测，感觉好像没什么用？？？？？？？？？　暂时先注释掉了
　
　　～　设置　联合初始化估计终止条件　　（TryVioInit 中）
　　～　联合初始化估计达到终止条件后更新　IMU：imuState(pos)/(vel)/(rot) 以及惯性参数 ba/bg/gw
                                             并对map中所有关键帧之间的预积分重新计算　pKF->ComputePreInt();
　　　　　　　　　　　　　　　　　　　　                    视觉： scale/ kf pose/ map point/ seed parameter/velocity/       （TryVioInit 中）
　　　　　　　　　　　　　　　　　　　                 
　　～　联合初始化更新完成后，设定一个 flag: vioInitFinsh(true),表明　视觉惯性信息已经对齐，惯性参数已经可以用于运动估计
　　～　输出轨迹在初始化更新之后，会有明显的尺度收缩效果
　　～　测试
    ****精度　scale_corrected_rmse: 0.088991/ 0.115131/ 0.139035
                                 / 0.075047
                 Scale correction: 1.0116433573943742
　　　　****精度  不校正尺度　　 　rmse: 0.089872
　　　　　　　
//以上完成将ｉｍｕ传感器数据的添加，预积分模块，视觉惯性联合初始化部分的代码．代码量约1000．
　　　　　　　





























                           
                    
